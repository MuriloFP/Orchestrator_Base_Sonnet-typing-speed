/* TypingInput Component Styles */
.typing-input-container {
  background: var(--color-surface-elevated);
  border: 1px solid var(--color-border-light);
  border-radius: var(--radius-xl);
  padding: var(--space-6);
  box-shadow: var(--shadow-md);
  position: relative;
  overflow: hidden;
  transition: all var(--transition-normal);
  cursor: text;
}

.typing-input-container::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 4px;
  background: linear-gradient(90deg, var(--color-primary-400), var(--color-success-400), var(--color-primary-400));
  background-size: 200% 100%;
  animation: inputShimmer 3s ease-in-out infinite;
  opacity: 0;
  transition: opacity var(--transition-normal);
}

@keyframes inputShimmer {
  0% { background-position: -200% 0; }
  100% { background-position: 200% 0; }
}

.typing-input-container.active::before {
  opacity: 1;
}

.typing-input-container.active {
  border-color: var(--color-primary-200);
  box-shadow: var(--shadow-lg), 0 0 20px rgba(59, 130, 246, 0.1);
}

.typing-input-container.disabled {
  opacity: 0.6;
  cursor: not-allowed;
  background: var(--color-surface);
}

.typing-input-container.disabled::before {
  display: none;
}

/* Hidden Input Field */
.typing-input {
  position: absolute;
  left: -9999px;
  opacity: 0;
  pointer-events: none;
  width: 1px;
  height: 1px;
}

/* Visual Input Display */
.input-display {
  min-height: 80px;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: var(--radius-lg);
  border: 2px dashed var(--color-border);
  background: var(--color-surface);
  transition: all var(--transition-fast);
  position: relative;
}

.input-display.focused {
  border-color: var(--color-primary-300);
  background: var(--color-primary-50);
  border-style: solid;
}

.input-display.focused::after {
  content: '';
  position: absolute;
  inset: -2px;
  border-radius: var(--radius-lg);
  padding: 2px;
  background: linear-gradient(45deg, var(--color-primary-400), var(--color-success-400), var(--color-primary-400));
  background-size: 200% 200%;
  animation: borderGlow 2s ease-in-out infinite;
  mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
  mask-composite: exclude;
  -webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
  -webkit-mask-composite: xor;
}

@keyframes borderGlow {
  0%, 100% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
}

/* Input Prompt */
.input-prompt {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: var(--space-3);
  text-align: center;
  color: var(--color-text-secondary);
}

.input-icon {
  font-size: var(--font-size-3xl);
  filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.1));
  animation: iconFloat 3s ease-in-out infinite;
}

@keyframes iconFloat {
  0%, 100% { transform: translateY(0); }
  50% { transform: translateY(-4px); }
}

.input-text {
  font-size: var(--font-size-lg);
  font-weight: var(--font-weight-medium);
  color: var(--color-text-primary);
  margin-bottom: var(--space-2);
}

.cursor-blink {
  font-family: var(--font-family-mono);
  font-size: var(--font-size-xl);
  font-weight: var(--font-weight-bold);
  color: var(--color-primary-600);
  animation: blink 1s step-end infinite;
  margin-left: var(--space-1);
}

@keyframes blink {
  0%, 50% { opacity: 1; }
  51%, 100% { opacity: 0; }
}

/* Input Disabled State */
.input-disabled {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: var(--space-2);
  text-align: center;
  color: var(--color-text-muted);
}

.disabled-icon {
  font-size: var(--font-size-2xl);
  opacity: 0.6;
}

.disabled-text {
  font-size: var(--font-size-base);
  font-weight: var(--font-weight-medium);
}

/* Input Feedback */
.input-feedback {
  margin-top: var(--space-4);
  display: flex;
  flex-direction: column;
  gap: var(--space-2);
}

.character-count {
  font-size: var(--font-size-sm);
  color: var(--color-text-secondary);
  text-align: center;
  padding: var(--space-2) var(--space-3);
  background: var(--color-surface);
  border-radius: var(--radius-md);
  border: 1px solid var(--color-border-light);
  font-family: var(--font-family-mono);
  font-weight: var(--font-weight-medium);
}

.input-hints {
  text-align: center;
  font-size: var(--font-size-xs);
  color: var(--color-text-muted);
  padding: var(--space-2);
  background: var(--color-surface);
  border-radius: var(--radius-md);
  border: 1px solid var(--color-border-light);
}

/* Hover Effects */
.typing-input-container:hover:not(.disabled) {
  border-color: var(--color-primary-300);
  box-shadow: var(--shadow-lg);
}

.typing-input-container:hover:not(.disabled) .input-display:not(.focused) {
  border-color: var(--color-primary-200);
  background: var(--color-primary-25);
}

/* Focus States */
.typing-input-container:focus-within {
  outline: 2px solid var(--color-primary-500);
  outline-offset: 2px;
}

/* Active Typing State */
.typing-input-container.active .input-prompt {
  animation: promptPulse 2s ease-in-out infinite;
}

@keyframes promptPulse {
  0%, 100% { transform: scale(1); }
  50% { transform: scale(1.02); }
}

/* Success State (when typing is going well) */
.typing-input-container.success {
  border-color: var(--color-success-200);
}

.typing-input-container.success::before {
  background: linear-gradient(90deg, var(--color-success-400), var(--color-success-600));
}

.typing-input-container.success .input-display.focused {
  border-color: var(--color-success-300);
  background: var(--color-success-50);
}

/* Error State (when there are many errors) */
.typing-input-container.error {
  border-color: var(--color-error-200);
  animation: errorShake 0.5s ease-in-out;
}

.typing-input-container.error::before {
  background: linear-gradient(90deg, var(--color-error-400), var(--color-error-600));
}

.typing-input-container.error .input-display.focused {
  border-color: var(--color-error-300);
  background: var(--color-error-50);
}

@keyframes errorShake {
  0%, 100% { transform: translateX(0); }
  25% { transform: translateX(-4px); }
  75% { transform: translateX(4px); }
}

/* Responsive Design */
@media (max-width: 768px) {
  .typing-input-container {
    padding: var(--space-4);
  }
  
  .input-display {
    min-height: 60px;
  }
  
  .input-icon {
    font-size: var(--font-size-2xl);
  }
  
  .input-text {
    font-size: var(--font-size-base);
  }
  
  .cursor-blink {
    font-size: var(--font-size-lg);
  }
  
  .character-count {
    font-size: var(--font-size-xs);
  }
  
  .input-hints {
    font-size: 10px;
  }
}

@media (max-width: 480px) {
  .typing-input-container {
    padding: var(--space-3);
  }
  
  .input-display {
    min-height: 50px;
  }
  
  .input-prompt {
    gap: var(--space-2);
  }
  
  .input-icon {
    font-size: var(--font-size-xl);
  }
  
  .input-text {
    font-size: var(--font-size-sm);
  }
  
  .cursor-blink {
    font-size: var(--font-size-base);
  }
  
  .disabled-icon {
    font-size: var(--font-size-xl);
  }
  
  .disabled-text {
    font-size: var(--font-size-sm);
  }
}

/* Dark theme adjustments */
.typing-input-container.dark .input-display {
  background: var(--color-background);
}

.typing-input-container.dark .input-display.focused {
  background: rgba(59, 130, 246, 0.1);
}

.typing-input-container.dark .character-count {
  background: var(--color-background);
}

.typing-input-container.dark .input-hints {
  background: var(--color-background);
}

.typing-input-container.dark.success .input-display.focused {
  background: rgba(34, 197, 94, 0.1);
}

.typing-input-container.dark.error .input-display.focused {
  background: rgba(239, 68, 68, 0.1);
}

/* High contrast mode */
@media (prefers-contrast: high) {
  .typing-input-container {
    border: 2px solid currentColor;
  }
  
  .input-display {
    border: 2px solid currentColor;
  }
  
  .character-count,
  .input-hints {
    border: 2px solid currentColor;
  }
}

/* Reduced motion */
@media (prefers-reduced-motion: reduce) {
  .typing-input-container::before {
    animation: none;
  }
  
  .input-icon {
    animation: none;
  }
  
  .cursor-blink {
    animation: none;
    opacity: 1;
  }
  
  .input-display.focused::after {
    animation: none;
  }
  
  .typing-input-container.active .input-prompt {
    animation: none;
  }
  
  .typing-input-container.error {
    animation: none;
  }
}

/* Touch device optimizations */
@media (hover: none) and (pointer: coarse) {
  .typing-input-container {
    min-height: 100px;
  }
  
  .input-display {
    min-height: 80px;
  }
  
  .input-text {
    font-size: var(--font-size-lg);
  }
  
  .typing-input-container:hover:not(.disabled) {
    border-color: var(--color-border-light);
    box-shadow: var(--shadow-md);
  }
}

/* Print styles */
@media print {
  .typing-input-container {
    box-shadow: none;
    border: 1px solid #000;
  }
  
  .typing-input-container::before {
    display: none;
  }
  
  .input-display {
    background: #f5f5f5;
    border: 1px solid #000;
  }
  
  .cursor-blink {
    display: none;
  }
  
  .input-hints {
    display: none;
  }
}

/* Accessibility improvements */
.typing-input-container[aria-disabled="true"] {
  opacity: 0.6;
  cursor: not-allowed;
}

.typing-input-container[aria-invalid="true"] {
  border-color: var(--color-error-500);
}

/* Screen reader only content */
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}